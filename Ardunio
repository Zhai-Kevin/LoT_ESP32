#include <WiFi.h>
#include <PubSubClient.h>

// Replace with your network credentials
const char* ssid = "BELL836-V";
const char* password = "6819wdlG";

// Replace with your MQTT broker details
const char* mqtt_server = "165.73.249.219";
const int mqtt_port = 1883;
const char* mqtt_topic = "nodemcu/led";

// Define the GPIO pins for the LEDs
const int led1_pin = 1;
const int led2_pin = 2;

// Define the MQTT client and WiFi client
WiFiClient espClient;
PubSubClient client(espClient);

// Define callback function for MQTT message
void callback(char* topic, byte* payload, unsigned int length) {
  if (payload[0] == '2') {
    // Turn on both LEDs
    digitalWrite(led1_pin, HIGH);
    digitalWrite(led2_pin, HIGH);
  } else if (payload[0] == '3') {
    // Turn off both LEDs
    digitalWrite(led1_pin, LOW);
    digitalWrite(led2_pin, LOW);
  }
}

void setup() {
  // Set up the serial communication
  Serial.begin(115200);

  // Set up the GPIO pins for the LEDs
  pinMode(led1_pin, OUTPUT);
  pinMode(led2_pin, OUTPUT);
  digitalWrite(led1_pin, LOW);
  digitalWrite(led2_pin, LOW);

  // Connect to WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  // Connect to MQTT broker
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
  while (!client.connected()) {
    Serial.print("Connecting to MQTT broker...");
    if (client.connect("ESP32S")) {
      Serial.println("connected");
      client.subscribe(mqtt_topic);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" retrying in 5 seconds");
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    Serial.print("Reconnecting to MQTT broker...");
    if (client.connect("ESP32S")) {
      Serial.println("connected");
      client.subscribe(mqtt_topic);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" retrying in 5 seconds");
      delay(5000);
    }
  }
  client.loop();
}
